---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>CobaltHosting</title>
</head>
<body>
   <?php include 'header.html'; ?>
  <hr>
  <?php include 'second.html'; ?>
  <hr>
  <?php include 'packge.html'; ?>
  <hr>
  <?php include 'dit-krijgg-jee-er-altijd-bij.html'; ?>

  <style>
    body {
      margin: 0;
      background: #097925;
	  background: radial-gradient(circle, rgba(9, 121, 37, 1) 3%, rgba(10, 10, 10, 1) 100%);
      color: #fffff;
      font-family: 'Courier New', monospace;
background: radial-gradient(circle at center, #050505 0%, #000000 100%);
    }

    canvas {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      z-index: 0;
      opacity: 0.2;
      pointer-events: none;
    }

    .content {
      position: relative;
      z-index: 10;
      padding: 2rem;
    }
  </style>

<canvas id="glitchMatrix" style="position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:-1;background:#010101;"></canvas>

<script>
  const canvas = document.getElementById("glitchMatrix");
  const ctx = canvas.getContext("2d");
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;

  const letters = "01".split("");
  const fontSize = 16;
  const columns = canvas.width / fontSize;
  const drops = Array.from({ length: columns }).fill(1);

  function draw() {
    ctx.fillStyle = "rgba(0, 0, 0, 0.1)";
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    ctx.fillStyle = "#00ff88";
    ctx.font = fontSize + "px monospace";

    drops.forEach((y, i) => {
      const text = letters[Math.floor(Math.random() * letters.length)];
      ctx.fillText(text, i * fontSize, y * fontSize);
      drops[i] = y * fontSize > canvas.height && Math.random() > 0.975 ? 0 : y + 1;
    });
  }

  setInterval(draw, 40);
</script>

<style>
  .overlay::before {
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image:
      url('https://grainy-gradients.vercel.app/noise.svg'),
      repeating-linear-gradient(to bottom, rgba(0, 255, 136, 0.03), transparent 3px);
    background-size: cover;
    opacity: 0.05;
  }
</style>

<body class="overlay">

</body>
</html>

</html>
